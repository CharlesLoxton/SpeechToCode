<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAAAzAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgAAAKIAAAD+AAAA/gAA
        AKIAAAAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAAAAiAAAAPcAAAD/AAAA/wAA
        AP8AAAD/AAAA9wAAAIgAAAARAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAB5AAAA8QAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA8QAAAHgAAAAGAAAAAAAAAAAAAACPAAAA/wAAAP8AAAD/AAAA9wAA
        AH0AAAA3AAAANQAAAH4AAADzAAAA/wAAAP8AAAD/AAAAjQAAAAAAAAAAAAAAtwAAAP8AAAD/AAAA+AAA
        ADUAAAAAAAAAHgAAAB8AAAAAAAAAQQAAAP4AAAD/AAAA/wAAALcAAAAAAAAAAAAAALcAAAD/AAAA/wAA
        AIEAAAAAAAAAjwAAAP8AAAD/AAAArwAAAOsAAACdAAAAsAAAAOwAAAC3AAAAAAAAAAAAAAC3AAAA/wAA
        AP8AAAA2AAAAJQAAAP8AAAD/AAAA/wAAAP8AAAC0AAAAIAAAAC4AAABzAAAAtwAAAAAAAAAAAAAAtwAA
        AP8AAAD/AAAANgAAACQAAAD/AAAA/wAAAP8AAAD/AAAAtAAAAB0AAAAnAAAAcwAAALcAAAAAAAAAAAAA
        ALcAAAD/AAAA/wAAAIEAAAAAAAAAjwAAAP8AAAD/AAAArwAAAOsAAACSAAAApwAAAOoAAAC3AAAAAAAA
        AAAAAAC3AAAA/wAAAP8AAAD4AAAANQAAAAAAAAAeAAAAHwAAAAAAAABBAAAA/gAAAP8AAAD/AAAAtwAA
        AAAAAAAAAAAAjwAAAP8AAAD/AAAA/wAAAPcAAAB9AAAANwAAADUAAAB+AAAA8wAAAP8AAAD/AAAA/wAA
        AI0AAAAAAAAAAAAAAAYAAAB5AAAA8QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA8QAA
        AHgAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAB8AAACqAAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD9AAAAqgAA
        AB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADEAAAC8AAAA/wAAAP8AAAC8AAAAMQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAAAzAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD8PwAA8A8AAOAHAACDwQAAh+EAAIQBAACMHQAAjB0AAIQB
        AACH4QAAg8EAAOAHAADwDwAA/D8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAEIAAACiAAAAogAAAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAB4AAACiAAAA/gAAAP8AAAD/AAAA/gAAAKIAAAAdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAwAAACAAAAA9wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPcAAACAAAAADAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQAAABmAAAA6QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADoAAAAZgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABEAAAA0gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA0gAAAEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAApAAAAtAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAALQAAAApAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAZAAAAowAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAACjAAAAGAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAAOMAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP0AAADDAAAAggAAAF0AAABcAAAAeQAAAMQAAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADhAAAADwAAAAAAAAAAAAAAAAAAAAAAAABgAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADIAAAAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAADRAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAABcAAAAAAAAAAAAAAAAAAAAAAAAAHEAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAqAAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAC2AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAHEAAAAAAAAAAAAAAAAAAAAAAAAAcQAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAMcAAAAHAAAAAAAAAAAAAAAAAAAALAAAAGwAAABtAAAAMAAAAAAAAAAAAAAAAAAA
        AFIAAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAcQAAAAAAAAAAAAAAAAAAAAAAAABxAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD+AAAANQAAAAAAAAAAAAAADQAAAKsAAAD/AAAA/wAAAP8AAAD/AAAAqwAA
        ADYAAAC3AAAA/wAAAOsAAADoAAAA/gAAAN0AAAD3AAAA/wAAAP8AAABxAAAAAAAAAAAAAAAAAAAAAAAA
        AHEAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAMQAAAAAAAAAAAAAAAAAAACvAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAZgAAAFIAAAD1AAAAAAAAAMIAAAD/AAAA/wAAAHEAAAAAAAAAAAAA
        AAAAAAAAAAAAcQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAfAAAAAAAAAAAAAAANAAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAD0AAAAOAAAACwAAACEAAAAAAAAAGgAAAIwAAAD/AAAAcQAA
        AAAAAAAAAAAAAAAAAAAAAABxAAAA/wAAAP8AAAD/AAAA/wAAAP8AAABdAAAAAAAAAAAAAABuAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAApQAAAD0AAAA0AAAAnQAAAAAAAAB1AAAAygAA
        AP8AAABxAAAAAAAAAAAAAAAAAAAAAAAAAHEAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAF4AAAAAAAAAAAAA
        AG4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAC0AAAARAAAADQAAACdAAAAAAAA
        AIEAAADTAAAA/wAAAHEAAAAAAAAAAAAAAAAAAAAAAAAAcQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAfAAA
        AAAAAAAAAAAANAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAC4AAAAHAAAABQAA
        ABAAAAAAAAAADQAAAIMAAAD/AAAAcQAAAAAAAAAAAAAAAAAAAAAAAABxAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADEAAAAAAAAAAAAAAAAAAAArwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AGYAAABSAAAA9QAAAAAAAADCAAAA/wAAAP8AAABxAAAAAAAAAAAAAAAAAAAAAAAAAHEAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAAA1AAAAAAAAAAAAAAANAAAAqwAAAP8AAAD/AAAA/wAAAP8AAACrAAAANgAA
        ALcAAAD/AAAA4AAAANwAAAD9AAAAzAAAAPMAAAD/AAAA/wAAAHEAAAAAAAAAAAAAAAAAAAAAAAAAcQAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAMcAAAAHAAAAAAAAAAAAAAAAAAAALAAAAGwAAABtAAAAMAAA
        AAAAAAAAAAAAAAAAAFIAAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAcQAAAAAAAAAAAAAAAAAA
        AAAAAABxAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAKgAAAAHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAHAAAAtgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABxAAAAAAAA
        AAAAAAAAAAAAAAAAAGAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAMgAAAAxAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAANEAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AF4AAAAAAAAAAAAAAAAAAAAAAAAAEQAAAOMAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP0AAADDAAAAggAAAF0AAABcAAAAeQAAAMQAAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADhAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQAAAKMAAAD+AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD+AAAAowAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4AAADMAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAzAAAAD4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAABmAAAA5AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA5AAAAGYAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAMAAAAiAAAAPUAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA9AAAAIgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQAAAKIAAAD9AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/QAAAKIAAAAZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAC9AAAA/wAA
        AP8AAAD/AAAA/wAAAL0AAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABCAAAAogAAAKIAAABCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////n////gf///gB///wAP//wAA//wAAD/wAAAP4AHAB+AP
        8AfgH/gH4D/8B+B4EAfgcANH4PAH5+DwA2fg8ANH4PAH5+BwA0fgeBAH4D/8B+Af+AfgD/AH4AHAB/AA
        AA/8AAA//wAA//+AAf//4Af///gf///+f///////
</value>
  </data>
</root>